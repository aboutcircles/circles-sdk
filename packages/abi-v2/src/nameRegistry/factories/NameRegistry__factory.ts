/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { NameRegistry, NameRegistryInterface } from "../NameRegistry";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_hub",
        type: "address",
        internalType: "contract IHubV2",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "DEFAULT_CIRCLES_NAME_PREFIX",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "DEFAULT_CIRCLES_SYMBOL",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_SHORT_NAME",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint72",
        internalType: "uint72",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "avatarToMetaDataDigest",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "calculateShortNameWithNonce",
    inputs: [
      {
        name: "_avatar",
        type: "address",
        internalType: "address",
      },
      {
        name: "_nonce",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "shortName_",
        type: "uint72",
        internalType: "uint72",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "customNames",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "customSymbols",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMetadataDigest",
    inputs: [
      {
        name: "_avatar",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hub",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IHubV2",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isValidName",
    inputs: [
      {
        name: "_name",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "isValidSymbol",
    inputs: [
      {
        name: "_symbol",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "name",
    inputs: [
      {
        name: "_avatar",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerCustomName",
    inputs: [
      {
        name: "_avatar",
        type: "address",
        internalType: "address",
      },
      {
        name: "_name",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "registerCustomSymbol",
    inputs: [
      {
        name: "_avatar",
        type: "address",
        internalType: "address",
      },
      {
        name: "_symbol",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "registerShortName",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "registerShortNameWithNonce",
    inputs: [
      {
        name: "_nonce",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "searchShortName",
    inputs: [
      {
        name: "_avatar",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "shortName_",
        type: "uint72",
        internalType: "uint72",
      },
      {
        name: "nonce_",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setMetadataDigest",
    inputs: [
      {
        name: "_avatar",
        type: "address",
        internalType: "address",
      },
      {
        name: "_metadataDigest",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "shortNameToAvatar",
    inputs: [
      {
        name: "",
        type: "uint72",
        internalType: "uint72",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "shortNames",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint72",
        internalType: "uint72",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [
      {
        name: "_avatar",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "updateMetadataDigest",
    inputs: [
      {
        name: "_metadataDigest",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "RegisterShortName",
    inputs: [
      {
        name: "avatar",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "shortName",
        type: "uint72",
        indexed: false,
        internalType: "uint72",
      },
      {
        name: "nonce",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UpdateMetadataDigest",
    inputs: [
      {
        name: "avatar",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "metadataDigest",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CirclesAddressCannotBeZero",
    inputs: [
      {
        name: "code",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "CirclesAmountMustNotBeZero",
    inputs: [
      {
        name: "code",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "CirclesAmountOverflow",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "code",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "CirclesArrayMustNotBeEmpty",
    inputs: [
      {
        name: "code",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "CirclesArraysLengthMismatch",
    inputs: [
      {
        name: "lengthArray1",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "lengthArray2",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "code",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "CirclesAvatarMustBeRegistered",
    inputs: [
      {
        name: "avatar",
        type: "address",
        internalType: "address",
      },
      {
        name: "code",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "CirclesIdMustBeDerivedFromAddress",
    inputs: [
      {
        name: "providedId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "code",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "CirclesInvalidCirclesId",
    inputs: [
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "code",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "CirclesInvalidFunctionCaller",
    inputs: [
      {
        name: "caller",
        type: "address",
        internalType: "address",
      },
      {
        name: "expectedCaller",
        type: "address",
        internalType: "address",
      },
      {
        name: "code",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "CirclesInvalidParameter",
    inputs: [
      {
        name: "parameter",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "code",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "CirclesInvalidString",
    inputs: [
      {
        name: "str",
        type: "string",
        internalType: "string",
      },
      {
        name: "code",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "CirclesLogicAssertion",
    inputs: [
      {
        name: "code",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "CirclesNamesAvatarAlreadyHasCustomNameOrSymbol",
    inputs: [
      {
        name: "avatar",
        type: "address",
        internalType: "address",
      },
      {
        name: "nameOrSymbol",
        type: "string",
        internalType: "string",
      },
      {
        name: "code",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "CirclesNamesInvalidName",
    inputs: [
      {
        name: "avatar",
        type: "address",
        internalType: "address",
      },
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "code",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "CirclesNamesOrganizationHasNoSymbol",
    inputs: [
      {
        name: "organization",
        type: "address",
        internalType: "address",
      },
      {
        name: "code",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "CirclesNamesShortNameAlreadyAssigned",
    inputs: [
      {
        name: "avatar",
        type: "address",
        internalType: "address",
      },
      {
        name: "shortName",
        type: "uint72",
        internalType: "uint72",
      },
      {
        name: "code",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "CirclesNamesShortNameWithNonceTaken",
    inputs: [
      {
        name: "avatar",
        type: "address",
        internalType: "address",
      },
      {
        name: "nonce",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "shortName",
        type: "uint72",
        internalType: "uint72",
      },
      {
        name: "takenByAvatar",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "CirclesProxyAlreadyInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "CirclesReentrancyGuard",
    inputs: [
      {
        name: "code",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b50604051611c40380380611c4083398101604081905261002e9161007f565b6001600160a01b03811661005b576040516321efd2b360e01b81525f600482015260240160405180910390fd5b5f80546001600160a01b0319166001600160a01b03929092169190911790556100ac565b5f6020828403121561008f575f80fd5b81516001600160a01b03811681146100a5575f80fd5b9392505050565b611b87806100b95f395ff3fe608060405234801561000f575f80fd5b506004361061013d575f3560e01c80635dabbfa7116100b4578063c5a5688c11610079578063c5a5688c14610331578063d199889314610344578063dc03a0f314610357578063e27871dd1461036a578063e44b8c351461037d578063e9973f7c14610390575f80fd5b80635dabbfa7146102e0578063829c0fde146102f35780638fd4f71a146102fb57806398245b0c1461030e578063a86e35761461031e575f80fd5b8063365a86fc11610105578063365a86fc146102245780633857d9d71461024e5780633bb7b6c5146102635780634068e58d1461027657806348f813b5146102955780634a4b8ae3146102b8575f80fd5b8063013046ae1461014157806301984892146101865780631455d1e6146101a65780631e30397f146101cb57806328898d0a146101ee575b5f80fd5b61016961014f36600461165d565b60016020525f90815260409020546001600160481b031681565b6040516001600160481b0390911681526020015b60405180910390f35b61019961019436600461165d565b6103c2565b60405161017d91906116a1565b6101996040518060400160405280600681526020016552696e67732d60d01b81525081565b6101de6101d9366004611718565b61059e565b604051901515815260200161017d565b6102166101fc36600461165d565b6001600160a01b03165f9081526005602052604090205490565b60405190815260200161017d565b5f54610236906001600160a01b031681565b6040516001600160a01b03909116815260200161017d565b61026161025c366004611757565b6107d8565b005b61019961027136600461165d565b610884565b61021661028436600461165d565b60056020525f908152604090205481565b6101996040518060400160405280600481526020016352494e4760e01b81525081565b6102366102c636600461176e565b60026020525f90815260409020546001600160a01b031681565b6101996102ee36600461165d565b61091b565b610261610933565b6101de610309366004611718565b6109da565b610169684e900abb53e6b70fff81565b61019961032c36600461165d565b610b30565b61026161033f366004611757565b610da6565b610261610352366004611794565b610e4c565b6101696103653660046117e5565b610eea565b610261610378366004611794565b610f5d565b61026161038b3660046117e5565b610ff4565b6103a361039e36600461165d565b61103b565b604080516001600160481b03909316835260208301919091520161017d565b5f8054604051633b7bae4f60e21b81526001600160a01b03808516600483015260609385936003939192169063edeeb93c90602401602060405180830381865afa158015610412573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610436919061180f565b6001600160a01b03160361046a57818160405163aa8ed7bd60e01b815260040161046192919061182a565b60405180910390fd5b5f5460405163f72c436f60e01b81526001600160a01b0386811660048301529091169063f72c436f90602401602060405180830381865afa1580156104b1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104d59190611846565b61058b576001600160a01b0384165f90815260036020526040812080546104fb90611865565b80601f016020809104026020016040519081016040528092919081815260200182805461052790611865565b80156105725780601f1061054957610100808354040283529160200191610572565b820191905f5260205f20905b81548152906001019060200180831161055557829003601f168201915b505050505090505f81511115610589579250610597565b505b610594846110f5565b92505b5050919050565b5f8083838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505082519293505060209091119050806105ea57508051155b156105f8575f9150506107d2565b5f5b81518110156107cb575f8282815181106106165761061661189d565b01602001516001600160f81b0319169050600360fc1b81108015906106495750603960f81b6001600160f81b0319821611155b15801561067f5750604160f81b6001600160f81b031982161080159061067d5750602d60f91b6001600160f81b0319821611155b155b80156106b45750606160f81b6001600160f81b03198216108015906106b25750603d60f91b6001600160f81b0319821611155b155b80156106ce5750600160fd1b6001600160f81b0319821614155b80156107005750602d60f81b6001600160f81b0319821614806106fe5750605f60f81b6001600160f81b03198216145b155b801561071a5750601760f91b6001600160f81b0319821614155b801561074c5750600560fb1b6001600160f81b03198216148061074a5750602960f81b6001600160f81b03198216145b155b80156107665750602760f81b6001600160f81b0319821614155b80156107805750601360f91b6001600160f81b0319821614155b80156107b25750602b60f81b6001600160f81b0319821614806107b05750602360f81b6001600160f81b03198216145b155b156107c2575f93505050506107d2565b506001016105fa565b5060019150505b92915050565b5f8054604051633b7bae4f60e21b815233600482018190529260029290916001600160a01b039091169063edeeb93c90602401602060405180830381865afa158015610826573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061084a919061180f565b6001600160a01b03160361087557818160405163aa8ed7bd60e01b815260040161046192919061182a565b61087f338461118f565b505050565b60046020525f90815260409020805461089c90611865565b80601f01602080910402602001604051908101604052809291908181526020018280546108c890611865565b80156109135780601f106108ea57610100808354040283529160200191610913565b820191905f5260205f20905b8154815290600101906020018083116108f657829003601f168201915b505050505081565b60036020525f90815260409020805461089c90611865565b5f8054604051633b7bae4f60e21b81523360048201819052929182916001600160a01b039091169063edeeb93c90602401602060405180830381865afa15801561097f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109a3919061180f565b6001600160a01b0316036109ce57818160405163aa8ed7bd60e01b815260040161046192919061182a565b6109d66111e7565b5050565b5f8083838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250508251929350509015905080610a25575060108151115b15610a33575f9150506107d2565b5f5b81518110156107cb575f828281518110610a5157610a5161189d565b01602001516001600160f81b0319169050600360fc1b8110801590610a845750603960f81b6001600160f81b0319821611155b80610ab65750604160f81b6001600160f81b0319821610801590610ab65750602d60f91b6001600160f81b0319821611155b80610ae85750606160f81b6001600160f81b0319821610801590610ae85750603d60f91b6001600160f81b0319821611155b80610b005750602d60f81b6001600160f81b03198216145b80610b185750605f60f81b6001600160f81b03198216145b610b27575f93505050506107d2565b50600101610a35565b5f8054604051633b7bae4f60e21b81526001600160a01b038085166004808401919091526060948694919390929091169063edeeb93c90602401602060405180830381865afa158015610b85573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ba9919061180f565b6001600160a01b031603610bd457818160405163aa8ed7bd60e01b815260040161046192919061182a565b5f5460405163b1ce8eab60e01b81526001600160a01b0386811660048301529091169063b1ce8eab90602401602060405180830381865afa158015610c1b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c3f9190611846565b15610c6157835f604051633191a38d60e01b815260040161046192919061182a565b5f5460405163278330f160e21b81526001600160a01b03868116600483015290911690639e0cc3c490602401602060405180830381865afa158015610ca8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ccc9190611846565b15610d83576001600160a01b0384165f9081526004602052604081208054610cf390611865565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1f90611865565b8015610d6a5780601f10610d4157610100808354040283529160200191610d6a565b820191905f5260205f20905b815481529060010190602001808311610d4d57829003601f168201915b505050505090505f81511115610d81579250610597565b505b505060408051808201909152600481526352494e4760e01b602082015292915050565b5f8054604051633b7bae4f60e21b815233600482018190529260019290916001600160a01b039091169063edeeb93c90602401602060405180830381865afa158015610df4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e18919061180f565b6001600160a01b031603610e4357818160405163aa8ed7bd60e01b815260040161046192919061182a565b61087f83611201565b5f546001906001600160a01b03163314610e8b575f54604051636844c68b60e11b81526104619133916001600160a01b039091169084906004016118b1565b8115610ee457610e9b838361059e565b610ec0578383835f60405163d76958f760e01b815260040161046194939291906118ff565b6001600160a01b0384165f908152600360205260409020610ee283858361198f565b505b50505050565b6040516bffffffffffffffffffffffff19606084901b166020820152603481018290525f908190605401604051602081830303815290604052805190602001209050684e900abb53e6b70fff6001610f429190611a5d565b610f55906001600160481b031682611a98565b949350505050565b5f546002906001600160a01b03163314610f9c575f54604051636844c68b60e11b81526104619133916001600160a01b039091169084906004016118b1565b8115610ee457610fac83836109da565b610fd257838383600160405163d76958f760e01b815260040161046194939291906118ff565b6001600160a01b0384165f908152600460205260409020610ee283858361198f565b5f80546001600160a01b03163314611031575f54604051636844c68b60e11b81526104619133916001600160a01b039091169084906004016118b1565b61087f838361118f565b6001600160a01b0381165f9081526001602052604081205481906001600160481b0316156110ab576001600160a01b0383165f8181526001602052604080822054905163ec7765c960e01b815260048101939093526001600160481b031660248301526044820152606401610461565b6110b58382610eea565b6001600160481b0381165f908152600260205260409020549092506001600160a01b0316156110f057806110e881611aab565b9150506110ab565b915091565b6001600160a01b0381165f908152600160205260409020546060906001600160481b03168061117c575f611131846001600160a01b03166112f2565b90506040518060400160405280600681526020016552696e67732d60d01b81525081604051602001611164929190611ac3565b60405160208183030381529060405292505050919050565b5f611131826001600160481b03166113bd565b6001600160a01b0382165f8181526005602052604090819020839055517f0a1d44830b9ad1708d85ea4071d97fd532b52504d7397d3e44461badd9f4f827906111db9084815260200190565b60405180910390a25050565b5f806111f23361103b565b915091506109d63383836114fb565b335f908152600160205260409020546001600160481b03161561126257335f8181526001602081905260409182902054915163ec7765c960e01b815260048101939093526001600160481b0390911660248301526044820152606401610461565b5f61126d3383610eea565b6001600160481b0381165f908152600260205260409020549091506001600160a01b0316156112e7576001600160481b0381165f818152600260205260409081902054905163690a563f60e11b81523360048201526024810185905260448101929092526001600160a01b03166064820152608401610461565b6109d63382846114fb565b6040805181815260608181018352915f91906020820181803683370190505090505f5b5f841180611321575080155b156113b3575f611332603a86611a98565b90506040518060600160405280603a8152602001611b18603a9139818151811061135e5761135e61189d565b01602001516001600160f81b031916838361137881611aab565b94508151811061138a5761138a61189d565b60200101906001600160f81b03191690815f1a9053506113ab603a86611af1565b945050611315565b6105948282611589565b60408051600c8082528183019092526060915f91906020820181803683370190505090505f5b5f8411806113ef575080155b15611481575f611400603a86611a98565b90506040518060600160405280603a8152602001611b18603a9139818151811061142c5761142c61189d565b01602001516001600160f81b031916838361144681611aab565b9450815181106114585761145861189d565b60200101906001600160f81b03191690815f1a905350611479603a86611af1565b9450506113e3565b600c8110156113b3576040518060600160405280603a8152602001611b18603a91395f815181106114b4576114b461189d565b01602001516001600160f81b03191682826114ce81611aab565b9350815181106114e0576114e061189d565b60200101906001600160f81b03191690815f1a905350611481565b6001600160a01b0383165f818152600160209081526040808320805468ffffffffffffffffff19166001600160481b038816908117909155808452600283529281902080546001600160a01b0319168517905580519283529082018490527f368e444a05faec665f223aebb06d81a86daf0bc59bd7bccc160042422c8b6229910160405180910390a2505050565b60605f8267ffffffffffffffff8111156115a5576115a5611937565b6040519080825280601f01601f1916602001820160405280156115cf576020820181803683370190505b5090505f5b8381101561163e5784816115e9600187611b04565b6115f39190611b04565b815181106116035761160361189d565b602001015160f81c60f81b8282815181106116205761162061189d565b60200101906001600160f81b03191690815f1a9053506001016115d4565b509392505050565b6001600160a01b038116811461165a575f80fd5b50565b5f6020828403121561166d575f80fd5b813561167881611646565b9392505050565b5f5b83811015611699578181015183820152602001611681565b50505f910152565b602081525f82518060208401526116bf81604085016020870161167f565b601f01601f19169190910160400192915050565b5f8083601f8401126116e3575f80fd5b50813567ffffffffffffffff8111156116fa575f80fd5b602083019150836020828501011115611711575f80fd5b9250929050565b5f8060208385031215611729575f80fd5b823567ffffffffffffffff81111561173f575f80fd5b61174b858286016116d3565b90969095509350505050565b5f60208284031215611767575f80fd5b5035919050565b5f6020828403121561177e575f80fd5b81356001600160481b0381168114611678575f80fd5b5f805f604084860312156117a6575f80fd5b83356117b181611646565b9250602084013567ffffffffffffffff8111156117cc575f80fd5b6117d8868287016116d3565b9497909650939450505050565b5f80604083850312156117f6575f80fd5b823561180181611646565b946020939093013593505050565b5f6020828403121561181f575f80fd5b815161167881611646565b6001600160a01b0392909216825260ff16602082015260400190565b5f60208284031215611856575f80fd5b81518015158114611678575f80fd5b600181811c9082168061187957607f821691505b60208210810361189757634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b6001600160a01b03938416815291909216602082015260ff909116604082015260600190565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b6001600160a01b03851681526060602082018190525f9061192390830185876118d7565b905060ff8316604083015295945050505050565b634e487b7160e01b5f52604160045260245ffd5b601f82111561087f57805f5260205f20601f840160051c810160208510156119705750805b601f840160051c820191505b81811015610ee2575f815560010161197c565b67ffffffffffffffff8311156119a7576119a7611937565b6119bb836119b58354611865565b8361194b565b5f601f8411600181146119ec575f85156119d55750838201355b5f19600387901b1c1916600186901b178355610ee2565b5f83815260208120601f198716915b82811015611a1b57868501358255602094850194600190920191016119fb565b5086821015611a37575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b634e487b7160e01b5f52601160045260245ffd5b6001600160481b03818116838216019080821115611a7d57611a7d611a49565b5092915050565b634e487b7160e01b5f52601260045260245ffd5b5f82611aa657611aa6611a84565b500690565b5f60018201611abc57611abc611a49565b5060010190565b5f8351611ad481846020880161167f565b835190830190611ae881836020880161167f565b01949350505050565b5f82611aff57611aff611a84565b500490565b818103818111156107d2576107d2611a4956fe31323334353637383941424344454647484a4b4c4d4e505152535455565758595a6162636465666768696a6b6d6e6f707172737475767778797aa2646970667358221220edfbc1533e0086dc30d68a3c624ad06a8c64a4c621dde27c1f47f70be9c9be2f64736f6c63430008180033";

type NameRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NameRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NameRegistry__factory extends ContractFactory {
  constructor(...args: NameRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _hub: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_hub, overrides || {});
  }
  override deploy(
    _hub: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_hub, overrides || {}) as Promise<
      NameRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NameRegistry__factory {
    return super.connect(runner) as NameRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NameRegistryInterface {
    return new Interface(_abi) as NameRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NameRegistry {
    return new Contract(address, _abi, runner) as unknown as NameRegistry;
  }
}
